plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'application'
	id 'checkstyle'
//	id 'org.liquibase.gradle' version '2.2.0'
}

group = 'hexlet.code'
version = '1.0-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

application {
	mainClass = 'hexlet.code.AppApplication'
}

dependencies {
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'

	annotationProcessor(
			'org.projectlombok:lombok',
			'com.querydsl:querydsl-apt:5.0.0:jakarta',
			'jakarta.persistence:jakarta.persistence-api:3.1.0'
	)

	implementation(

			'org.springframework.boot:spring-boot-starter-data-jpa',
			'org.springframework.boot:spring-boot-starter-web',
			'org.springframework.boot:spring-boot-starter-actuator',
//			'org.springframework.boot:spring-boot-starter-validation',
//			'org.springframework.boot:spring-boot-starter-security',
			'io.jsonwebtoken:jjwt:0.9.1',
			// Зависимость для swagger
			// Позволяет сгенерировать и проматривать интерактивную документацию по API
			'org.springdoc:springdoc-openapi-ui:1.7.0',
//			'org.liquibase:liquibase-core',
			'com.querydsl:querydsl-jpa:5.0.0:jakarta',
			'com.rollbar:rollbar-spring-boot-webmvc:1.10.0'
	)

//	liquibaseRuntime(
//			sourceSets.main.output,
//			'org.liquibase:liquibase-core',
//			'info.picocli:picocli:4.7.1',
//			'org.liquibase.ext:liquibase-hibernate6:4.21.1',
//			'org.springframework.boot:spring-boot-starter-data-jpa',
//			'com.h2database:h2',
//
//	)

	runtimeOnly (
			'com.h2database:h2',
			'org.postgresql:postgresql:42.6.0'
	)

	testImplementation(
//			'org.springframework.boot:spring-boot-starter-security',
//			'org.springframework.security:spring-security-test',
			'org.springframework.boot:spring-boot-starter-test',
			'com.tobedevoured.modelcitizen:spring:0.8.3'
	)
}

wrapper {
	gradleVersion = '7.4'
	distributionType = Wrapper.DistributionType.ALL
}


test {
	useJUnitPlatform()
}

compileJava {
	options.release = 17
	options.encoding = 'UTF-8'
}

tasks.named('test') {
	useJUnitPlatform()
}

task stage(dependsOn: [clean, installDist])
installDist.mustRunAfter clean
